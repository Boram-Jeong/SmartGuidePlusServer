<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Properties Files -->
	<!-- -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/properties/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- Parent DataSource Configuration -->
	<bean id="parentDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<!-- pool이 고갈되었을 경우 최대 대기 타임 ms -->
		<property name="maxWait" value="1000" />

		<!-- evictor 설정 샘플 -->
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- testWhileIdle 샘플 설정 5분마다 5개의 connection 꺼내 validation query를 날려 확인 -->
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<property name="numTestsPerEvictionRun" value="5" />
		<property name="minEvictableIdleTimeMillis" value="-1" />
		<property name="validationQuery" value="SELECT 1" />

		<!-- preparedStatement cache 사용여부 -->
		<property name="poolPreparedStatements" value="true" />
		<!-- preparedStatement cache 를 얼마나할지 설정. -->
		<property name="maxOpenPreparedStatements" value="50" />

		<!-- 해당 설정은 connection을 close하지 않았을 경우의 connection leak을 완하하기 위한 설정이다. 
			이제는 framework로 인해 이러한 일이 발생하여서는 안되는 상황이므로 사용하지 말아야 한다. 만약 connection leak이 
			발생한다면 leak이 발생하는곳을 찾아 수정해야 하며. 해당옵션으로 해결하는 것은 좋은 방법이 아니다. <property name="removeAbandoned" 
			value="false"/> <property name="removeAbandonedTimeout" value="50000"/> -->
	</bean>

	<!-- DataSource Configuration -->
	<bean id="guideDataSource" parent="parentDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 아래 4개의 설정은 가능한 동일하게 설정하는 것이 장애상황시의 예외 케이스를 줄일수 있다.. -->
		<property name="initialSize" value="5" />
		<property name="maxActive" value="5" />
		<property name="maxIdle" value="5" />
		<property name="minIdle" value="5" />
	</bean>

</beans>